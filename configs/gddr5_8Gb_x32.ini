; this is GDDR5 modeled for Micron's MT51J256M32
; there's some confusion in the spec regarding the device density
; e.g. for 8Gb part, there are 16 banks, each 16374 rows, and 128 columns
; each column is 32*8 = 256b (because of 8n prefetch)
; What's confusing is that for 8n prefetch DDR3 and DDR4, they will claim to have 
; 1024 columns instead of 128, and then throw away the least 3 bits.
; But for GDDR5, they just say they have 128 columns...
; so to be consistent, we add those 3 bits like DDR4 and DDR3 so that 
; each device has 10 column bits instead of 7 specified in the spec
; but those least 3 bits will be thrown away in address translation eventually
; also the frequency or tCK is confusing, the spec only says ftCK_min is 50MHz
; Micron part specs says 6~8Gb/s, while commercial products brands "aeffective memory clock" 11016 MHz
; the relation between these metrics are: 
; 8Gb/s refers to pin speed, which is twice tWCK and 4 times tCK
; so ftCK would be 2GHz and therefore tCK=0.5ns
; as for the "effective memory clock", it's obtained by 8Gb/s -> 8000 MHz basically..
; and if they overclock the memory a little bit then you get numbers like 11016MHz 
; aaaaand worst of all, the standard say very few about other timings... 

[dram_structure]
protocol = GDDR5
bankgroups = 4
banks_per_group = 4  ; 16 banks in total
rows = 16384 ;
columns =  1024  
device_width = 32  ; device width for each chip
BL = 8  ; 8 only for GDDR5
bankgroup_enable = true  ; can be disabled for GDDR5

; timing units in tCK unless otherwise specified
[timing]  
tCK = 0.5 ; so the GDDR5 devices are usually branded as xGb/s, so e.g. for 8Gb/s with x32b width, WCK freq would be 250MHz and CK would be 125MHz
; AL =  0  ; no posted cas for GDDR5
CL =  24  ; programmable from 7 to 24
CWL = 7  ; programmable from 4 to 7
; tRCD =   ; ACT to CAS, for GDDR5, RD and WR has different tRCD values...
tRCDRD = 24  ; 
tRCDWR = 20  ; 
tRP = 24 ; PRE period 
tRAS = 56  ; ACT to PRECHARGE
; tRC = tRAS + tRP ; ACT to ACT or REF
tRFC =   ; REF to ACT or to another REF
tRFC2 =   ;
tRFC4 =   ;
tREFI =  3800 ; average periodic refresh interval, 1.9us for 16K rows, so 3800 tCKs
tRPRE =  1; read preamble
tWPRE =  1; TODO figure this out, should be 1 or 2 
tRRD_S =  10 ; ACT to ACT to different bankgroups, or for SAME bankgroup when bankgroup is disabled, same applied to tWTR, tCCD, tRTPS
tRRD_L =  10 ; ACT to ACT to same bankgroup 
tWTR_S = 10  ; WRITE to READ, different bankgroup
tWTR_L = 10  ; WRITE to READ, same bankgroup
tFAW = 41  ; 
t32AW = 330  ; for GDDR5 only 
tWR = 24 ; write recovery time
; tWR2 =   ; tWR2 = 1 + tWR if using 2CK tWPRE
tCCD_S = 2  ; CAS to CAS, different BG 
tCCD_L = 3  ; CAS to CAS, same BG
tXS = 0  ; tXS = tRFC + 12, exit self refresh 
tCKSRE = 0  ; valid clocks after SRE or PDE
tXP = 10  ; exit power down  

tRTP_L = 2  ; unsed only when bankgroup is enabled and to the same bankgroup
tRTP_S = 2 ; used only when bankgroup is disabled, use 1 tCK for different bankgroups

; GDDR5
t32AW = ;  reflect long term device current supply capability, should be greater than 8*tFAW
tRFCb =   ; bank level refresh tRFC
tREFIb =   ; bank level refresh tREFI  
tRREFD =   ; timing between 2 bank refreshes of 2 different banks, or to ACT
tRFCPB =  ; timing between bank ref to act to the same bank, or between 2 rounds of 16 bank ref 

activation_window_depth = ; TODO rethink what to do with this

; keep the following for compatability reason

tRTRS = 2  ; TODO should use explict timing on this 

tCAS = 3  ; tCL
tCWD = 3  ; tCAS


[system]
channel_size = 8192  ; size for each channel in MB
channels = 1
bus_width = 128  ; 1 rank, 4 devices
address_mapping = chrobabgraco
queue_structure = PER_BANK
queue_size = 16
req_buffering_enabled = true


[other]
;validation_output =  ddr4_verification.log
epoch_period = 10000 ;aggregate output per this many cycles, set 0 to mute output

