; HBM 2.0 
; basically same as HBM1 just tCK = 1 ns
; 
; 4 die, 2 channels per die
[dram_structure]
protocol = HBM
bankgroups = 4
banks_per_group = 4
rows = 32768 ;
columns = 64 ; 
device_width = 128  ; device width for each chip
BL = 4  ;
num_dies = 4

; timing units in tCK unless otherwise specified
; most of the timing parameters here are from the following paper
; Architecting an Energy-Efficient DRAM System for GPUs ISCA 2017 
; except that they seems to be using HBM2 but comparing to 
; other public sources the timing parameters didn't change much
; from Gen1 to Gen2 so they're good
[timing]  
tCK = 1 ; 1Gbps I/o - > 500MHz tCK
CL = 14  ;
CWL = 4 ;
tRCDRD = 14  ; 
tRCDWR = 14  ; 
tRP = 14 ; PRE period 
tRAS = 34  ; ACT to PRECHARGE
; tRC = tRAS + tRP ; ACT to ACT or REF
tRFC = 260  ; REF to ACT or to another REF
tREFI =  3900 ; average periodic refresh interval, 3.9us
tREFIb = 128 
tRPRE =  1 ; read preamble
tWPRE =  1   
tRRD_S =  4 ; ACT to ACT to different bankgroups, or for SAME bankgroup when bankgroup is disabled, same applied to tWTR, tCCD, tRTPS
tRRD_L =  6 ; ACT to ACT to same bankgroup 
tWTR_S = 6  ; WRITE to READ, different bankgroup
tWTR_L = 8  ; WRITE to READ, same bankgroup
tFAW = 30  ;
tWR = 16 ; write recovery time
; tWR2 =   ; tWR2 = 1 + tWR if using 2CK tWPRE
tCCD_S = 1  ; CAS to CAS, different BG 
tCCD_L = 2  ; CAS to CAS, same BG
tXS =  268 ; tXS = tRFC + tXP, exit self refresh 
tCKE = 8 ;
tCKSRE = 10  ; valid clocks after SRE or PDE
tXP = 8  ; exit power down  
tRTP_L = 6  ; unsed only when bankgroup is enabled and to the same bankgroup
tRTP_S = 4 ; used only when bankgroup is disabled, use 1 tCK for different bankgroups

[power]
VDD = 1.2  ;
IDD0 = 65  ;
IDD2P = 28  ;
IDD2N = 40  ;
IDD3P = 40 ;
IDD3N = 55 ;
IDD4W = 500 ;
IDD4R = 390  ;
IDD5AB = 250  ;
IDD6x = 31  ;


[system]
channel_size = 512  ; size for each channel in MB, for HBM, this is the same as device density
channels = 8  ; has to be 8 channels 
bus_width = 128   ; this is more like the bus width per channel
address_mapping = rorabgbachco  ; you wanna be able to have row hits but also use many channels
queue_structure = PER_RANK
queue_size = 64
req_buffering_enabled = false


[other]
;validation_output =  hbm_verification.log
output_prefix = HBM2_8Gb_x128
epoch_period = 1000000 ;aggregate output per this many cycles, set 0 to mute output

